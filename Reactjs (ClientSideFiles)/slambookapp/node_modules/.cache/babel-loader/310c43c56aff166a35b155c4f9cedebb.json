{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\src\\\\user\\\\profile\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport PollList from '../../poll/PollList';\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar, Tabs } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\nimport { formatDate } from '../../util/Helpers';\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\nvar TabPane = Tabs.TabPane;\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {\n      user: null,\n      isLoading: false\n    };\n    _this.loadUserProfile = _this.loadUserProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"loadUserProfile\",\n    value: function loadUserProfile(username) {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getUserProfile(username).then(function (response) {\n        _this2.setState({\n          user: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var username = this.props.match.params.username;\n      this.loadUserProfile(username);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.match.params.username !== nextProps.match.params.username) {\n        this.loadUserProfile(nextProps.match.params.username);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return React.createElement(LoadingIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.serverError) {\n        return React.createElement(ServerError, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      }\n\n      var tabBarStyle = {\n        textAlign: 'center'\n      };\n      return React.createElement(\"div\", {\n        className: \"profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        className: \"user-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: \"user-avatar-circle\",\n        style: {\n          backgroundColor: getAvatarColor(this.state.user.name)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.user.name[0].toUpperCase())), React.createElement(\"div\", {\n        className: \"user-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"full-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.user.name), React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"@\", this.state.user.username), React.createElement(\"div\", {\n        className: \"user-joined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Joined \", formatDate(this.state.user.joinedAt)))), React.createElement(\"div\", {\n        className: \"user-poll-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        animated: false,\n        tabBarStyle: tabBarStyle,\n        size: \"large\",\n        className: \"profile-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"\".concat(this.state.user.pollCount, \" Polls\"),\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(PollList, {\n        username: this.props.match.params.username,\n        type: \"USER_CREATED_POLLS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tab: \"\".concat(this.state.user.voteCount, \" Votes\"),\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(PollList, {\n        username: this.props.match.params.username,\n        type: \"USER_VOTED_POLLS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))))) : null);\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["C:\\Users\\devan\\Desktop\\myProjectYard\\slambookapp\\src\\user\\profile\\Profile.js"],"names":["React","Component","PollList","getUserProfile","Avatar","Tabs","getAvatarColor","formatDate","LoadingIndicator","NotFound","ServerError","TabPane","Profile","props","state","user","isLoading","loadUserProfile","bind","username","setState","then","response","catch","error","status","notFound","serverError","match","params","nextProps","tabBarStyle","textAlign","backgroundColor","name","toUpperCase","joinedAt","pollCount","voteCount"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,gBAAP,MAA8B,+BAA9B;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,IAAMC,OAAO,GAAGN,IAAI,CAACM,OAArB;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AANe;AAOlB;;;;oCAEeC,Q,EAAU;AAAA;;AACtB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,SAAS,EAAE;AADD,OAAd;AAIAb,MAAAA,cAAc,CAACgB,QAAD,CAAd,CACCE,IADD,CACM,UAAAC,QAAQ,EAAI;AACd,QAAA,MAAI,CAACF,QAAL,CAAc;AACVL,UAAAA,IAAI,EAAEO,QADI;AAEVN,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIH,OAND,EAMGO,KANH,CAMS,UAAAC,KAAK,EAAI;AACd,YAAGA,KAAK,CAACC,MAAN,KAAiB,GAApB,EAAyB;AACrB,UAAA,MAAI,CAACL,QAAL,CAAc;AACVM,YAAAA,QAAQ,EAAE,IADA;AAEVV,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIH,SALD,MAKO;AACH,UAAA,MAAI,CAACI,QAAL,CAAc;AACVO,YAAAA,WAAW,EAAE,IADH;AAEVX,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIH;AACJ,OAlBD;AAmBH;;;wCAEmB;AAChB,UAAMG,QAAQ,GAAG,KAAKN,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,QAAzC;AACA,WAAKF,eAAL,CAAqBE,QAArB;AACH;;;uCAEkBW,S,EAAW;AAC1B,UAAG,KAAKjB,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,QAAxB,KAAqCW,SAAS,CAACF,KAAV,CAAgBC,MAAhB,CAAuBV,QAA/D,EAAyE;AACrE,aAAKF,eAAL,CAAqBa,SAAS,CAACF,KAAV,CAAgBC,MAAhB,CAAuBV,QAA5C;AACH;AACJ;;;6BAEQ;AACL,UAAG,KAAKL,KAAL,CAAWE,SAAd,EAAyB;AACrB,eAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,UAAG,KAAKF,KAAL,CAAWY,QAAd,EAAwB;AACpB,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,UAAG,KAAKZ,KAAL,CAAWa,WAAd,EAA2B;AACvB,eAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,UAAMI,WAAW,GAAG;AAChBC,QAAAA,SAAS,EAAE;AADK,OAApB;AAIA,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKlB,KAAL,CAAWC,IAAX,GACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAuC,QAAA,KAAK,EAAE;AAAEkB,UAAAA,eAAe,EAAE3B,cAAc,CAAC,KAAKQ,KAAL,CAAWC,IAAX,CAAgBmB,IAAjB;AAAjC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKpB,KAAL,CAAWC,IAAX,CAAgBmB,IAAhB,CAAqB,CAArB,EAAwBC,WAAxB,EADL,CADJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKrB,KAAL,CAAWC,IAAX,CAAgBmB,IAA5C,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA4B,KAAKpB,KAAL,CAAWC,IAAX,CAAgBI,QAA5C,CAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYZ,UAAU,CAAC,KAAKO,KAAL,CAAWC,IAAX,CAAgBqB,QAAjB,CADtB,CAHJ,CANJ,CADJ,EAeI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAC,GAAvB;AACI,QAAA,QAAQ,EAAE,KADd;AAEI,QAAA,WAAW,EAAEL,WAFjB;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,SAAS,EAAC,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,OAAD;AAAS,QAAA,GAAG,YAAK,KAAKjB,KAAL,CAAWC,IAAX,CAAgBsB,SAArB,WAAZ;AAAoD,QAAA,GAAG,EAAC,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,QAA5C;AAAsD,QAAA,IAAI,EAAC,oBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,EAQI,oBAAC,OAAD;AAAS,QAAA,GAAG,YAAK,KAAKL,KAAL,CAAWC,IAAX,CAAgBuB,SAArB,WAAZ;AAAqD,QAAA,GAAG,EAAC,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,QAA5C;AAAsD,QAAA,IAAI,EAAC,kBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CARJ,CADJ,CAfJ,CADJ,GA+BG,IAjCX,CADJ;AAsCH;;;;EAtGiBlB,S;;AAyGtB,eAAeW,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport PollList from '../../poll/PollList';\nimport { getUserProfile } from '../../util/APIUtils';\nimport { Avatar, Tabs } from 'antd';\nimport { getAvatarColor } from '../../util/Colors';\nimport { formatDate } from '../../util/Helpers';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\n\nconst TabPane = Tabs.TabPane;\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n\n        getUserProfile(username)\n        .then(response => {\n            this.setState({\n                user: response,\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });        \n            }\n        });        \n    }\n      \n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }        \n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n\n        const tabBarStyle = {\n            textAlign: 'center'\n        };\n\n        return (\n            <div className=\"profile\">\n                { \n                    this.state.user ? (\n                        <div className=\"user-profile\">\n                            <div className=\"user-details\">\n                                <div className=\"user-avatar\">\n                                    <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n                                        {this.state.user.name[0].toUpperCase()}\n                                    </Avatar>\n                                </div>\n                                <div className=\"user-summary\">\n                                    <div className=\"full-name\">{this.state.user.name}</div>\n                                    <div className=\"username\">@{this.state.user.username}</div>\n                                    <div className=\"user-joined\">\n                                        Joined {formatDate(this.state.user.joinedAt)}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"user-poll-details\">    \n                                <Tabs defaultActiveKey=\"1\" \n                                    animated={false}\n                                    tabBarStyle={tabBarStyle}\n                                    size=\"large\"\n                                    className=\"profile-tabs\">\n                                    <TabPane tab={`${this.state.user.pollCount} Polls`} key=\"1\">\n                                        <PollList username={this.props.match.params.username} type=\"USER_CREATED_POLLS\" />\n                                    </TabPane>\n                                    <TabPane tab={`${this.state.user.voteCount} Votes`}  key=\"2\">\n                                        <PollList username={this.props.match.params.username} type=\"USER_VOTED_POLLS\" />\n                                    </TabPane>\n                                </Tabs>\n                            </div>  \n                        </div>  \n                    ): null               \n                }\n            </div>\n        );\n    }\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}