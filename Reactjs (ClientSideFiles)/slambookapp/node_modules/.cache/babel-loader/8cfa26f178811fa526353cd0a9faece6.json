{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\devan\\\\Desktop\\\\myProjectYard\\\\slambookapp\\\\src\\\\user\\\\profile\\\\Profile.js\";\nimport React, { Component } from \"react\"; // import PollList from '../../poll/PollList';\n\nimport { getUserProfile } from \"../../util/APIUtils\";\nimport { Avatar, Tabs } from \"antd\";\nimport { getAvatarColor } from \"../../util/Colors\";\nimport { formatDate } from \"../../util/Helpers\";\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\nimport \"./Profile.css\";\nimport NotFound from \"../../common/NotFound\";\nimport ServerError from \"../../common/ServerError\";\nvar TabPane = Tabs.TabPane;\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {\n      user: null,\n      isLoading: false\n    };\n    _this.loadUserProfile = _this.loadUserProfile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"loadUserProfile\",\n    value: function loadUserProfile(username) {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getUserProfile(username).then(function (response) {\n        _this2.setState({\n          user: response,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        if (error.status === 404) {\n          _this2.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var username = this.props.match.params.username;\n      this.loadUserProfile(username);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.props.match.params.username !== nextProps.match.params.username) {\n        this.loadUserProfile(nextProps.match.params.username);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return React.createElement(LoadingIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.notFound) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.serverError) {\n        return React.createElement(ServerError, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }\n\n      var tabBarStyle = {\n        textAlign: \"center\"\n      };\n      return React.createElement(\"div\", {\n        className: \"profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.user ? React.createElement(\"div\", {\n        className: \"user-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: \"user-avatar-circle\",\n        style: {\n          backgroundColor: getAvatarColor(this.state.user.name)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.user.name[0].toUpperCase())), React.createElement(\"div\", {\n        className: \"user-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"full-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.user.name), React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"@\", this.state.user.username), React.createElement(\"div\", {\n        className: \"user-joined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Joined \", formatDate(this.state.user.joinedAt)))), React.createElement(\"div\", {\n        className: \"user-poll-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        animated: false,\n        tabBarStyle: tabBarStyle,\n        size: \"large\",\n        className: \"profile-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"\".concat(this.state.user.pollCount, \" Polls\"),\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(TabPane, {\n        tab: \"\".concat(this.state.user.voteCount, \" Votes\"),\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })))) : null);\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["C:\\Users\\devan\\Desktop\\myProjectYard\\slambookapp\\src\\user\\profile\\Profile.js"],"names":["React","Component","getUserProfile","Avatar","Tabs","getAvatarColor","formatDate","LoadingIndicator","NotFound","ServerError","TabPane","Profile","props","state","user","isLoading","loadUserProfile","bind","username","setState","then","response","catch","error","status","notFound","serverError","match","params","nextProps","tabBarStyle","textAlign","backgroundColor","name","toUpperCase","joinedAt","pollCount","voteCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import PollList from '../../poll/PollList';\nimport { getUserProfile } from \"../../util/APIUtils\";\nimport { Avatar, Tabs } from \"antd\";\nimport { getAvatarColor } from \"../../util/Colors\";\nimport { formatDate } from \"../../util/Helpers\";\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\nimport \"./Profile.css\";\nimport NotFound from \"../../common/NotFound\";\nimport ServerError from \"../../common/ServerError\";\n\nconst TabPane = Tabs.TabPane;\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      isLoading: false\n    };\n    this.loadUserProfile = this.loadUserProfile.bind(this);\n  }\n\n  loadUserProfile(username) {\n    this.setState({\n      isLoading: true\n    });\n\n    getUserProfile(username)\n      .then(response => {\n        this.setState({\n          user: response,\n          isLoading: false\n        });\n      })\n      .catch(error => {\n        if (error.status === 404) {\n          this.setState({\n            notFound: true,\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            serverError: true,\n            isLoading: false\n          });\n        }\n      });\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    this.loadUserProfile(username);\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.match.params.username !== nextProps.match.params.username) {\n      this.loadUserProfile(nextProps.match.params.username);\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    if (this.state.notFound) {\n      return <NotFound />;\n    }\n\n    if (this.state.serverError) {\n      return <ServerError />;\n    }\n\n    const tabBarStyle = {\n      textAlign: \"center\"\n    };\n\n    return (\n      <div className=\"profile\">\n        {this.state.user ? (\n          <div className=\"user-profile\">\n            <div className=\"user-details\">\n              <div className=\"user-avatar\">\n                <Avatar\n                  className=\"user-avatar-circle\"\n                  style={{\n                    backgroundColor: getAvatarColor(this.state.user.name)\n                  }}\n                >\n                  {this.state.user.name[0].toUpperCase()}\n                </Avatar>\n              </div>\n              <div className=\"user-summary\">\n                <div className=\"full-name\">{this.state.user.name}</div>\n                <div className=\"username\">@{this.state.user.username}</div>\n                <div className=\"user-joined\">\n                  Joined {formatDate(this.state.user.joinedAt)}\n                </div>\n              </div>\n            </div>\n            <div className=\"user-poll-details\">\n              <Tabs\n                defaultActiveKey=\"1\"\n                animated={false}\n                tabBarStyle={tabBarStyle}\n                size=\"large\"\n                className=\"profile-tabs\"\n              >\n                <TabPane tab={`${this.state.user.pollCount} Polls`} key=\"1\">\n                  {/* <PollList username={this.props.match.params.username} type=\"USER_CREATED_POLLS\" /> */}\n                </TabPane>\n                <TabPane tab={`${this.state.user.voteCount} Votes`} key=\"2\">\n                  {/* <PollList username={this.props.match.params.username} type=\"USER_VOTED_POLLS\" /> */}\n                </TabPane>\n              </Tabs>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}